---
title: "Analysis of Covert attention session - All Targets (Horizontally & vertically positioned)"
format:
  html:
    code-fold: true
    page-layout: full
jupyter: python3
---


```{python}
import os 
import glob
import json

RootAnalysisFolder = os.path.split(os.path.split(os.getcwd())[0])[0]

import mne
from mne.io import concatenate_raws

import numpy as np
import matplotlib.pyplot as plt
plt.rcParams['figure.figsize']=(15,8)
plt.rcParams["figure.dpi"] = 300.
import sys
sys.path.append(RootAnalysisFolder)


from AddPyABA_Path import PyABA_path
sys.path.append(PyABA_path)
import gaze_tools,py_tools

from CovertAttention_fun import CovertAttention
```

*fif file name definition

```{python}

RootFolder =  os.path.split(RootAnalysisFolder)[0]

RootDirectory_RAW = RootFolder + '/_data/FIF/'
RootDirectory_Results = RootFolder + '/_results/'

FifFileName_Horiz = RootDirectory_RAW + "***SUJ***/***SUJ***_VisAtt_Horiz.raw.fif"
FifFileName_Verti = RootDirectory_RAW + "***SUJ***/***SUJ***_VisAtt_Verti.raw.fif"

SUBJECT_NAME = os.path.split(os.path.split(FifFileName_Horiz)[0])[1]
FlagProcessAnalysis = os.path.isfile(FifFileName_Horiz)
FlagET = False


```


Read Raw File

```{python}

# Read fif filename 
if FlagProcessAnalysis :
	CovertAtt_Merg = CovertAttention()


	DictEvent = {'StdStim1/AttStim1' : 1 , 'DevStim1/AttStim1'  : 2 ,
		         'StdStim2/AttStim1' : 3 , 'DevStim2/AttStim1' : 4 , 
				 'StdStim1/AttStim2'  : 11, 'DevStim1/AttStim2'  : 12,
				 'StdStim2/AttStim2' : 13, 'DevStim2/AttStim2' : 14,
				 'Instruct/AttStim1' : 9 , 'Instruct/AttStim2' : 10 }
	
	
	
	mne_rawVertiCovAtt = CovertAtt_Merg.ReadFileandConvertEvent(FifFileName_Verti, DictEvent)
	mne_rawHorizCovAtt = CovertAtt_Merg.ReadFileandConvertEvent(FifFileName_Horiz, DictEvent)
	
	Events_Verti, Events_dict_Verti = mne.events_from_annotations(mne_rawVertiCovAtt,verbose='ERROR')
	Events_Horiz, Events_dict_Horiz = mne.events_from_annotations(mne_rawHorizCovAtt,verbose='ERROR')
	
	mne_rawMergeCovAtt = concatenate_raws([mne_rawHorizCovAtt,mne_rawVertiCovAtt])
	FlagET = 'Gaze_LEye_X' in mne_rawMergeCovAtt.info['ch_names']

else:
	print("  ****************         NO DATA          ****************")	
```

## Attentional components
### Standards
```{python}
if FlagProcessAnalysis :
	figStd,EpochStd = CovertAtt_Merg.CompareStimUnderCond(mne_rawMergeCovAtt,'Std',[1,1],'Standards',None)
else:
	print("  ****************         NO DATA          ****************")
```
### Deviants
```{python}
if FlagProcessAnalysis :
	figDev,EpochDev = CovertAtt_Merg.CompareStimUnderCond(mne_rawMergeCovAtt,'Dev',[2.5,2.5],'Deviants',None)
else:
	print("  ****************         NO DATA          ****************")
```



### Compute the P300 Effect: compare Dev ERPs at Cz & Pz under Attended and Ignored condition
```{python}
if FlagProcessAnalysis :
		figDevAttVsIgn,P300Effect_OK = CovertAtt_Merg.Compare_Stim_2Cond_ROI(EpochDev, ["crimson","steelblue"],[2.5,2.5],[0.25,0.8], ['Cz','Pz'],0.05)
else:
	print("  ****************         NO DATA          ****************")
```



## Behavior & Features
```{python}

if FlagProcessAnalysis :
	Behav_Acc_Merge,TabNbStimPerBlock_Merge,figFeatures_Merge,Features_Merge,nb_spatial_filters,NbPtsEpoch= CovertAtt_Merg.ComputeFeatures(mne_rawMergeCovAtt)

	print('Accuracy = ' +  f"{Behav_Acc_Merge*100:.2f}" + ' %')
else:
	print("  ****************         NO DATA          ****************")
```

## Decoding
### Cross validation with one Xdawn Training
```{python}

if FlagProcessAnalysis :
	accuracy_stds_devs,accuracy_stds,accuracy_devs,accuracy_Stim1,accuracy_Stim2 = CovertAtt_Merg.ClassicCrossValidation(Features_Merge,nb_spatial_filters,NbPtsEpoch)
	XValid_Acc_1TrainXdawn = {"All":accuracy_stds_devs,"Std":accuracy_stds,"Dev":accuracy_devs,"Stim1":accuracy_Stim1,"Stim2":accuracy_Stim2}
	print("   *********** Classic X-Validation ")
	print("           Accuracy all stim :  " ,  "{:.2f}".format(accuracy_stds_devs))
	print("   ***********   ")
	print("     Accuracy Std Only       :  " ,  "{:.2f}".format(accuracy_stds))
	print("     Accuracy Dev Only       :  " ,  "{:.2f}".format(accuracy_devs))
	print("     Accuracy Stim Left Only   :  " ,  "{:.2f}".format(accuracy_Stim1))
	print("     Accuracy Stim Right Only  :  " , "{:.2f}".format(accuracy_Stim2))	
else:
	print("  ****************         NO DATA          ****************")
```
### Cross validation with Xdawn retraining for each training dataset
```{python}
if FlagProcessAnalysis :
	accuracy_stds_devs,accuracy_stds,accuracy_devs,accuracy_Stim1,accuracy_Stim2 = CovertAtt_Merg.ComputeAccuracy(mne_rawMergeCovAtt,TabNbStimPerBlock_Merge)
	XValid_Acc_ReTrainXdawn = {"All":accuracy_stds_devs,"Std":accuracy_stds,"Dev":accuracy_devs,"Stim1":accuracy_Stim1,"Stim2":accuracy_Stim2}
	print("   *********** X-Validation with retrained Xdawn ")
	print("           Accuracy all stim :  " ,  "{:.2f}".format(accuracy_stds_devs))
	print("   ***********   ")
	print("     Accuracy Std Only       :  " ,  "{:.2f}".format(accuracy_stds))
	print("     Accuracy Dev Only       :  " ,  "{:.2f}".format(accuracy_devs))
	print("     Accuracy Stim Left Only   :  " ,  "{:.2f}".format(accuracy_Stim1))
	print("     Accuracy Stim RightOnly  :  " , "{:.2f}".format(accuracy_Stim2))
else:
	print("  ****************         NO DATA          ****************")
```







## Independant Components fitted in Attended condition
### Standards
```{python}
if FlagProcessAnalysis :
	Events_Merge, _ = mne.events_from_annotations(mne_rawMergeCovAtt,verbose='ERROR')
	fig_CompareCond_IC_Std_Horiz = CovertAtt_Merg.CompareCondFromIcaCompo(mne_rawMergeCovAtt,Events_Merge,['eeg'],-0.1,1.0,0.15,'Std',[1,1],'Standards',2000,0.15,None)
else:
	print("  ****************         NO DATA          ****************")
```

### Deviants
```{python}
if FlagProcessAnalysis :
	Events_Merge, _ = mne.events_from_annotations(mne_rawMergeCovAtt,verbose='ERROR')
	fig_CompareCond_IC_Dev_Horiz = CovertAtt_Merg.CompareCondFromIcaCompo(mne_rawMergeCovAtt,Events_Merge,['eeg'],-0.1,1.0,0.15,'Dev',[2.5,2.5],'Deviants',2000,0.15,None)
else:
	print("  ****************         NO DATA          ****************")
```





## Horizontal EOG Attended vs Ignored
### Standards
```{python}
if FlagProcessAnalysis :
	CovertAtt_Merg.plotEOGCompareAttIgn(mne_rawMergeCovAtt,['EOGLef','EOGRig'],'Horiz',-0.1,0.6,'Std',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```

### Deviants
```{python}
if FlagProcessAnalysis :
	CovertAtt_Merg.plotEOGCompareAttIgn(mne_rawMergeCovAtt,['EOGLef','EOGRig'],'Horiz',-0.1,0.6,'Dev',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```


## Vertical EOG (Fp1 & Fp2)  Attended vs Ignored
### Standards
```{python}
if FlagProcessAnalysis :
	CovertAtt_Merg.plotEOGCompareAttIgn (mne_rawMergeCovAtt,['Fp1','Fp2'],'Verti',-0.1,0.6,'Std',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```

### Deviants
```{python}
if FlagProcessAnalysis :
	CovertAtt_Merg.plotEOGCompareAttIgn (mne_rawMergeCovAtt,['Fp1','Fp2'],'Verti',-0.1,0.6,'Dev',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```



## Gaze position Attended vs Ignored
### Left Eye
#### Standards
```{python}
if FlagET :
	CovertAtt_Merg.plotGazeCompareAttIgn (mne_rawMergeCovAtt,['Gaze_LEye_X','Gaze_LEye_Y'],-0.1,0.6,'Std',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```

#### Deviants
```{python}
if FlagET :
	CovertAtt_Merg.plotGazeCompareAttIgn(mne_rawMergeCovAtt,['Gaze_LEye_X','Gaze_LEye_Y'],-0.1,0.6,'Dev',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```


### Right Eye
#### Standards
```{python}
if FlagET :
	CovertAtt_Merg.plotGazeCompareAttIgn(mne_rawMergeCovAtt,['Gaze_REye_X','Gaze_REye_Y'],-0.1,0.6,'Std',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```

#### Deviants
```{python}
if FlagET :
	CovertAtt_Merg.plotGazeCompareAttIgn(mne_rawMergeCovAtt,['Gaze_REye_X','Gaze_REye_Y'],-0.1,0.6,'Dev',0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```



## Spectral analysis of gaze position for each trial
```{python}
if FlagET :
	figSpectGaze,Results_SpectGaze = CovertAtt_Merg.GazeSpectralAnalysis(mne_rawMergeCovAtt,['Gaze_LEye_X','Gaze_LEye_Y','Gaze_REye_X','Gaze_REye_Y'],0.25,15,0.1)
else:
	print("  ****************         NO DATA          ****************")
```


## Spectral analysis of Vertical EOG for each trial
```{python}
if FlagProcessAnalysis :
	figSpectVertiEOG,Results_SpectVertiEOG = CovertAtt_Merg.EOGSpectralAnalysis(mne_rawMergeCovAtt,['Fp1','Fp2'],0.25,15,0.1,'Verti')
else:
	print("  ****************         NO DATA          ****************")
```

## Spectral analysis of Horizontal EOG for each trial
```{python}
if FlagProcessAnalysis :
	figSpectHorizEOG,Results_SpectHorizEOG = CovertAtt_Merg.EOGSpectralAnalysis(mne_rawMergeCovAtt,['EOGLef','EOGRig'],0.25,15,0.1,'Horiz')
else:
	print("  ****************         NO DATA          ****************")
```

## Pupil diameter in Attended condition, Deviants vs Standards
```{python}
if FlagET :
	CovertAtt_Merg.plotDiamPupillCompareStdDevAtt(mne_rawMergeCovAtt,['PupDi_LEye','PupDi_REye'],-0.1,0.6,0.05,None)
else:
	print("  ****************         NO DATA          ****************")
```



```{python}
if FlagProcessAnalysis :
	# Save results computed from gaze data in a *json file
	if not(os.path.exists(RootDirectory_Results + SUBJECT_NAME)):
		os.mkdir(RootDirectory_Results + SUBJECT_NAME)
	SaveDataFilename = RootDirectory_Results + SUBJECT_NAME + "/" + SUBJECT_NAME + "_Cov_Att_Merge.json"
	Results =  {'CrossVal_1TrainXdawn':XValid_Acc_1TrainXdawn,'CrossVal_ReTrainXdawn':XValid_Acc_ReTrainXdawn,"P300Effect":P300Effect_OK}
	with open(SaveDataFilename, "w") as outfile:
		json.dump(Results, outfile)
	if FlagET:
		py_tools.append_to_json_file(SaveDataFilename,  Results_SpectGaze)
	    
	py_tools.append_to_json_file(SaveDataFilename,  Results_SpectVertiEOG)
	py_tools.append_to_json_file(SaveDataFilename,  Results_SpectHorizEOG)
	py_tools.append_to_json_file(SaveDataFilename,  {'Behavior Accuracy':Behav_Acc_Merge}) 

	

```





